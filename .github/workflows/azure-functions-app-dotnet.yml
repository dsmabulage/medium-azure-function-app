name: Deploy DotNet project to Azure Function App

on:
  push:
    branches: ['main']

env:
  AZURE_FUNCTIONAPP_NAME: 'your-app-name'
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'FunctionApp1'
  DOTNET_VERSION: '8.0.x'
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Zip the Function App'
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
          zip -r FunctionApp1.zip .
          popd

      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v4
        with:
          name: 'FunctionApp1'
          path: './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'

      # - name: Azure login
      #   uses: azure/login@v2
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # - name: Azure CLI script
      #   uses: azure/cli@v2
      #   with:
      #     azcliversion: latest
      #     inlineScript: |
      #       az functionapp deployment source config-zip \
      #         --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
      #         --name ${{ env.AZURE_FUNCTIONAPP_NAME }} \
      #         --src ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output/FunctionApp1.zip
